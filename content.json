{"meta":{"title":"行尽江南","subtitle":"this is not a coffee cup","description":"行尽江南 crazyjhon qiufoao","author":"行尽江南","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"ajax以及后续绑定事件操作的代码位置关系，checkbox单全选联动","slug":"ajax以及后续绑定事件操作的代码位置关系，checkbox单全选联动","date":"2019-01-03T17:31:01.467Z","updated":"2019-01-04T08:37:36.474Z","comments":true,"path":"2019/01/04/ajax以及后续绑定事件操作的代码位置关系，checkbox单全选联动/","link":"","permalink":"http://yoursite.com/2019/01/04/ajax以及后续绑定事件操作的代码位置关系，checkbox单全选联动/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120//初始页面 var current_page=1; function loadPageData(page)&#123; // current_page=page; //淡出一下 $('tbody').fadeOut(); $.get('/admin/comments-data.php',&#123;page:page&#125;,function(res)&#123; **if(page&gt;res['total_page'])&#123; loadPageData(res['total_page']); return &#125;** //每次执行都要初始化整个分页，因为有可能ajax操作了数据，那么有些分页数据可能改变了 //但是并没有刷新页面，所以这里要再次初始化，再次初始化后要设置起始页面为当前页面 //而且在每次数据变化之后，上面都要判断当前页面是否超过了总页数，那么超过就调用重新获取数据后的总页数 **$('.pagination').twbsPagination('destroy'); $('.pagination').twbsPagination(&#123; first:'&amp;laquo;', last:'&amp;raquo;', prev:'&amp;lt;', next:'&amp;gt;', startPage: page, totalPages: res['total_page'], visiblePages: 5, initiateStartPageClick:false, //下面这个事件初始化不执行，因为上面设置了false onPageClick: function (evt, page) &#123; loadPageData(page); &#125; &#125;);** $('tbody').html($('#template').render(&#123;comments:res['comments']&#125;)); //淡入 $('tbody').fadeIn(); //给current_page重新赋值，等待删除或其他事件删除后再次回到原页面 current_page=page; //操作，删除数据 //防止由于ajax多次执行，元素多次注册绑定事件，所以每一次就取消，只绑定一次 if($._data($('tbody')[0], \"events\"))&#123; $('tbody').off(); &#125; $('tbody').on('click','.del',function()&#123; console.log(count++); var id=$(this).data('id'); var warning=$('.info-alert'); $.get('/admin/comments-delete.php',&#123;id:id&#125;,function(res)&#123; loadPageData(current_page); warning.html(res).css('display','block'); &#125;) &#125;) var checkList=$('.checkList'); var checkAll=$('#checkAll'); var delAll=$('#delAll'); var tbody=$('tbody'); var data_need=''; var idArr=[]; var count=0; var listLength=checkList.length; checkAll.on('change',function()&#123; //全选checkbox与各checkbox同步 var status=$(this).prop('checked'); checkList.prop('checked',status); if(status)&#123; //这里数组要清空,防止下方单选后这里又添加重数据 idArr=[]; checkList.each(function()&#123; var id=$(this).data('id'); idArr.push(id); &#125;) &#125;else&#123; idArr=[]; &#125; data_need=idArr.join(','); &#125;); checkList.on('change',function()&#123; var status=$(this).prop('checked'); var id=$(this).data('id'); // console.log(length); if(status)&#123; idArr.push(id); &#125;else&#123; //点的是谁就在数组中查找后删除 idArr.splice(idArr.indexOf(id),1); &#125; //点击单个checkbox与全选checkbox的联动性 var count=0; checkList.each(function()&#123; var status=$(this).prop('checked'); status==false?count--:count++; count==listLength?checkAll.prop('checked',true):checkAll.prop('checked',false); &#125;) data_need=idArr.join(','); &#125;); //这里当客户连续点击分页会有一个大bug,那就是不断出发分页的ajax之后(正常),给下面将要做的删除事件元素绑定了N+1次(点了N次)事件，这里必须解绑后重新绑定 if($._data(delAll[0], \"events\"))&#123; delAll.off(); &#125; delAll.on('click',function()&#123; //数据不为空才删除 if(data_need!=false)&#123; $.get('/admin/comments-delete.php',&#123;id:data_need&#125;,function(res)&#123; loadPageData(current_page); $('.info-alert').html(res).css('display','block'); &#125;) &#125; //这里如果点击全部删除按钮后，就把全选checkbox按钮的状态设置不勾选状态 if(checkAll.prop('checked'))&#123; checkAll.prop('checked',false); &#125; &#125;) &#125;); &#125; loadPageData(current_page);","categories":[],"tags":[]},{"title":"研究hexo","slug":"study","date":"2019-01-03T17:31:01.467Z","updated":"2019-01-04T08:03:39.377Z","comments":true,"path":"2019/01/04/study/","link":"","permalink":"http://yoursite.com/2019/01/04/study/","excerpt":"","text":"研究导航修改ing…","categories":[],"tags":[]}]}